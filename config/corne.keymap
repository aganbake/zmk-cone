/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

behaviors {
    td_than: tap_dance_0 {
        compatible = "zmk,behavior-tap-dance";
        label = "TAP_DANCE_0";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&kp LT>, <&kp GV>;
    };
    td_llv: tap_dance_1 {
        compatible = "zmk,behavior-tap-dance";
        label = "TAP_DANCE_1";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&kp LBKT>, <&kp LBRC>;
    };
    td_llvl: tap_dance_2 {
        compatible = "zmk,behavior-tap-dance";
        label = "TAP_DANCE_2";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&kp RBKT>, <&kp RBRC>;
    };
    td_mt: tap_dance_3 {
        compatible = "zmk,behavior-tap-dance";
        label = "TAP_DANCE_3";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&mt LSHIFT CAPSLOCK>, <&kp LSHFT>;
    };
};
/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
/ -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | SHFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ALTGR  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &td_mt &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp APOSTROPHE
   &kp LCTRL &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RALT
                  &kp LGUI &mo 1 &kp SPACE   &kp RET &mo 2 &kp RALT
                        >;
                };
                lower_layer {
// ----------------------------------------------------------------------------------------------------------
// | ESC  |  ºª\ |  ¿   |   ?  |   ^  |  *   |                    |  7/÷ |  8(“ |  9)” |   *  |  /   |BackSP|
// | SHFT |  <>  |  [{  |  ]}  |   '  |  "   |                    |  4$¢ |  5%∞ |  6&¬ |   +  |  -   |  ´   |
// | CTRL |  (   |  )   |  /\  | `^[  | +*]  |--------.    .------|  1!| |  2"@ | 3·#  |  0=≠ |  .   |  =   |
//                         | LGUI |LOWER | /Space  /       \Enter \  |HIGHER| LAlt |
                        bindings = <
   &kp ESC  &kp NUBS  &kp UNDER  &kp FSLH  &kp CARET  &kp STAR  &kp KP_N7 &kp KP_N8  &kp KP_N9 &kp BSLH  &kp AT &kp BSPC
   &trans &td_than &td_llv &td_llvl &kp APOS &kp QUOTE   &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp PLUS &kp MINUS &kp TILDE
   &trans  &kp LPAR   &kp RPAR   &kp BSLH  &kp AMPS   &kp AT   &kp KP_N1   &kp KP_N2   &kp KP_N3 &kp KP_N0  &kp UNDER &kp EQUAL
                          	        &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
                        >;
                };

                raise_layer {
                
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  PSCRN  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp UP  &kp KP_MULTIPLY &kp LPAR &kp PSCRN &kp BSPC
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp RIGHT &trans &trans &trans
   &kp F1 &KP F2   &KP F3 &KP F4   &KP F5   &KP F6      &kp F7 &kp F8  &kp F9        &kp F10 &kp F11 &kp F12
                    	     &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                    };
          };
};
